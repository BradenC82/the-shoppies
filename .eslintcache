[{"C:\\Users\\brade\\Documents\\Projects\\the-shoppies\\src\\App.js":"1","C:\\Users\\brade\\Documents\\Projects\\the-shoppies\\src\\index.js":"2"},{"size":4616,"mtime":1610139494849,"results":"3","hashOfConfig":"4"},{"size":240,"mtime":1609537584897,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"jmfwcx",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\brade\\Documents\\Projects\\the-shoppies\\src\\App.js",["11"],"import enTranslations from \"@shopify/polaris/locales/en.json\";\n\nimport {\n  AppProvider,\n  Page,\n  Card,\n  Icon,\n  TextField,\n  Layout,\n  Button,\n  Banner,\n  ResourceList,\n  ResourceItem,\n  Pagination,\n} from \"@shopify/polaris\";\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport { SearchMinor } from \"@shopify/polaris-icons\";\nimport axios from \"axios\";\n\nimport { debounce } from \"lodash\";\n\nconst apiKey = \"172b6f36\";\n\nconst url = `http://www.omdbapi.com/`;\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const getMovies = (title, pageNumber) => {\n    axios\n      .get(`${url}?s=${title}&type=movie&page=${pageNumber}&apikey=${apiKey}`)\n      .then(function (response) {\n        const { Search, totalResults } = response.data;\n        setTotalResults(totalResults ? totalResults : 0);\n        setResults(Search ? Search : []);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const debouncedApiCall = useCallback(\n    debounce(title => getMovies(title, 1), 500),\n    []\n  );\n\n  useEffect(() => {\n    debouncedApiCall(searchQuery);\n  }, [searchQuery, debouncedApiCall]);\n\n  const handleChange = newValue => {\n    setSearchQuery(newValue);\n  };\n\n  const [results, setResults] = useState([]);\n\n  const [nominations, setNominations] = useState([]);\n\n  const [totalResults, setTotalResults] = useState([]);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const Result = movie => {\n    const { Title, Year } = movie;\n    return (\n      <ResourceItem>\n        <p>{`${Title} - ${Year}`}</p>\n        <Button\n          disabled={nominations.includes(movie) || nominations.length >= 5}\n          onClick={() => setNominations([...nominations, movie])}\n        >\n          Nominate\n        </Button>\n      </ResourceItem>\n    );\n  };\n\n  const Nomination = (movie, id, index) => {\n    const { Title, Year, imdbID } = movie;\n    const rank = index + 1;\n    return (\n      <ResourceItem>\n        <p>{`${rank}. ${Title} - ${Year}`}</p>\n        <Button\n          onClick={() =>\n            setNominations(\n              nominations.filter(nomination => nomination.imdbID !== imdbID)\n            )\n          }\n        >\n          Remove\n        </Button>\n      </ResourceItem>\n    );\n  };\n\n  return (\n    <AppProvider i18n={enTranslations}>\n      <Page title=\"The Shoppies ðŸŽ¥\">\n        <Layout>\n          {nominations.length >= 5 && (\n            <Layout.Section>\n              <Banner title=\"You're all done!\">\n                <p>You've reached the maximum of 5 nominations</p>\n              </Banner>\n            </Layout.Section>\n          )}\n          <Layout.Section>\n            <Card sectioned>\n              <TextField\n                onChange={handleChange}\n                label=\"Movie title\"\n                value={searchQuery}\n                prefix={<Icon source={SearchMinor} color=\"inkLighter\" />}\n                placeholder=\"Search\"\n              />\n            </Card>\n          </Layout.Section>\n          <Layout.Section oneHalf>\n            <Card title={`Results for ${searchQuery ? searchQuery : \"...\"}`}>\n              <ResourceList\n                resourceName={{ singular: \"movie\", plural: \"movies\" }}\n                items={results}\n                renderItem={Result}\n                showHeader\n                totalItemsCount={totalResults}\n              />\n              <Card.Section>\n                <Pagination\n                  label=\"Results\"\n                  hasPrevious={currentPage > 1}\n                  onPrevious={() => {\n                    getMovies(searchQuery, currentPage - 1);\n                    setCurrentPage(currentPage - 1);\n                  }}\n                  hasNext={currentPage * 10 < totalResults}\n                  onNext={() => {\n                    getMovies(searchQuery, currentPage + 1);\n                    setCurrentPage(currentPage + 1);\n                  }}\n                />\n              </Card.Section>\n            </Card>\n          </Layout.Section>\n          <Layout.Section oneHalf>\n            <Card title=\"Nominations\">\n              <Card.Section>\n                <p>\n                  Movies you nominate will appear here. You may nominate up to a\n                  maximum of 5 movies.\n                </p>\n              </Card.Section>\n              <ResourceList\n                resourceName={{ singular: \"customer\", plural: \"customers\" }}\n                items={nominations}\n                renderItem={Nomination}\n              />\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </Page>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\brade\\Documents\\Projects\\the-shoppies\\src\\index.js",[],{"ruleId":"12","severity":1,"message":"13","line":43,"column":28,"nodeType":"14","endLine":43,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier"]